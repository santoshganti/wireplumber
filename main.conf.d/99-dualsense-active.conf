# SteamOS-style DualSense Audio Configuration
# 
# Purpose:
# - Keeps the DualSense controller's audio device active to ensure haptics work properly in games.
# - Mirrors system audio (from SB Katana V2) to the DualSense audio sink, simulating SteamOS behavior.
# - Prevents PipeWire from suspending the DualSense sink to ensure continuous availability.
# - Uses dynamic matching instead of hardcoded sink names to work across multiple Linux distros.
# 
context.objects = [
  {
    factory = adapter  # Creates an adapter object (a virtual node in PipeWire)
    args = {
      node.name = "dualsense-loopback"  # Unique identifier for this adapter
      node.description = "SteamOS-style DualSense Haptic Audio"  # Descriptive name for identification
      playback.props = {
        "media.class" = "Audio/Sink"  # Defines this as an audio sink (output device)
        "node.nick" = "DualSense Wireless Controller"  # Dynamically match DualSense controllers
        "node.description" = "DualSense wireless controller (PS5) Analog Surround 4.0"  # Ensures correct device selection
        "session.suspend-timeout-seconds" = 0  # Prevents PipeWire from suspending this sink
        "node.pause-on-idle" = false  # Ensures the DualSense stays active even when no audio is playing
      }
    }
  },
  {
    factory = link  # Creates a connection (link) between two nodes
    args = {
      output.node = "node.nick=SB Katana V2"  # Match SB Katana dynamically
      input.node = "node.nick=DualSense Wireless Controller"  # Match all DualSense controllers
      "latency.msec" = 1  # Ensures low-latency audio transmission for real-time haptics
    }
  }
]